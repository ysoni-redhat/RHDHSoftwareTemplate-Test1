apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: rhdhdemo1
  title: Yogita Spring Boot App
  description: scaffolder v1beta3 template demo
spec:
  owner: backstage/techdocs-core
  type: service

  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: https://github.com/ysoni-redhat/ActualSoftwareTest
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          repoUrl: ${{ parameters.repoUrl }}
          repoOwner: ${{ parseRepoUrl(parameters.repoUrl).owner }}
          repoName: ${{ parseRepoUrl(parameters.repoUrl).repo }}

    - id: debug-repo-url
      name: Debug Repo URL
      action: debug:log
      input:
        message: repoUrl = ${{ values.repoUrl }}

    - id: debug-repo-owner
      name: Debug Repo Owner
      action: debug:log
      input:
        message: repoOwner = ${{ values.repoOwner }}

    - id: debug-repo-name
      name: Debug Repo Name
      action: debug:log
      input:
        message: repoName = ${{ values.repoName }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ values.name }}
        repoUrl: ${{ values.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
